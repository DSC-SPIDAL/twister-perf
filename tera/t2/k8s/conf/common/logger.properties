# // Licensed under the Apache License, Version 2.0 (the "License");
# // you may not use this file except in compliance with the License.
# // You may obtain a copy of the License at
# //
# // http://www.apache.org/licenses/LICENSE-2.0
# //
# // Unless required by applicable law or agreed to in writing, software
# // distributed under the License is distributed on an "AS IS" BASIS,
# // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# // See the License for the specific language governing permissions and
# // limitations under the License.

# Properties file which configures the operation of the JDK
# logging facility.

# The system will look for this config file, first using
# a System property specified at startup:
#
# >java -Djava.util.logging.config.file=myLoggingConfigFilePath
#
# If this property is not specified, then the config file is
# retrieved from its default location at:
#
# JDK_HOME/jre/lib/logging.properties

# Global logging properties.
# ------------------------------------------
# The set of handlers to be loaded upon startup.
# Comma-separated list of class names.
# (? LogManager docs say no comma here, but JDK example has comma.)
handlers=edu.iu.dsc.tws.common.logging.Twister2FileLogHandler, java.util.logging.ConsoleHandler

# Default global logging level.
# Loggers and Handlers may override this level
.level=WARNING

# Loggers
# ------------------------------------------
# Loggers are usually attached to packages.
# Here, the level for each package is specified.
# The global level is used by default, so levels
# specified here simply act as an override.
edu.iu.dsc.tws.level=WARNING
edu.iu.dsc.tws.rsched.job.Twister2Submitter.level=INFO
# edu.iu.dsc.tws.comms.shuffle.FSKeyedSortedMerger2.level=INFO
# edu.iu.dsc.tws.examples.batch.terasort.TeraSort.level=INFO

# we set zookeeper and curator library log levels to WARNING
# they tend to log many messages in INFO
org.apache.curator.level=WARNING
org.apache.zookeeper.level=WARNING

# Handlers
# -----------------------------------------

# --- ConsoleHandler ---
# Override of global logging level
java.util.logging.ConsoleHandler.level=INFO
java.util.logging.ConsoleHandler.formatter=edu.iu.dsc.tws.common.logging.Twister2LogFormatter

# Twister2LogFormatter supports the same format as java.util.logging.SimpleFormatter
# Additionally it supports 7th parameter, which is the thread name
edu.iu.dsc.tws.common.logging.Twister2LogFormatter.format=[%1$tF %1$tT %1$tz] [%4$s] [%7$s] [%8$s] %3$s: %5$s %6$s %n

# --- FileHandler ---
# Override of global logging level
edu.iu.dsc.tws.common.logging.Twister2FileLogHandler.level=ALL

# Naming style for the output file:
# (The output file is placed in the directory
# defined by the "user.home" System property.)
# TW2 WORKERS WILL IGNORE THIS PROPERTY
# edu.iu.dsc.tws.common.logging.Twister2FileLogHandler.pattern=%h/.twister2/java%u.log

# Limiting size of output file in bytes:
edu.iu.dsc.tws.common.logging.Twister2FileLogHandler.limit=50000

# Number of output files to cycle through, by appending an
# integer to the base file name:
edu.iu.dsc.tws.common.logging.Twister2FileLogHandler.count=1

# Style of output (Simple or XML):
edu.iu.dsc.tws.common.logging.Twister2FileLogHandler.formatter=edu.iu.dsc.tws.common.logging.Twister2LogFormatter

# whether System.out and System.err should be redircted to log files
# When System.out and System.err are redirected to log file,
# All messages are only saved in log files. Only a few intial messages are shown on Dashboard.
# Otherwise, Dashboard has the complete messages,
# log files has the log messages except System.out and System.err.
edu.iu.dsc.tws.common.logging.Twister2FileLogHandler.sysouterr=false

edu.iu.dsc.tws.rsched.utils.JobUtils.level=INFO
edu.iu.dsc.tws.rsched.utils.JobUtils.formatter=edu.iu.dsc.tws.common.logging.Twister2LogFormatter
