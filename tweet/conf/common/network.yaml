# when there are multiple network interfaces on nodes,
# by default, workers use the ip returned by InetAddress.getLocalHost().getHostAddress()
# Users can specify the specific network interface to use by the workers
# list the network interfaces that can be used in order
# twister2 will try to get the ip address of the network interfaces and
# it will use the first network interface in this list that is up and not loop back address
# twister2.network.interfaces.for.workers: ['interface1', 'interface2']

# max wait time for twister2 workers to connect to each other after the barrier operation
# default is 30 seconds
# twister2.network.max.connection.establishment.time: 30000

### DEFAULT CONFIGURATION FOR ALL OPERATIONS, THESE ARE OVERRIDDEN AT THE BOTTOM for specific
### operations
#############################################################################################

# the buffer size to be used
twister2.network.buffer.size: 1024000

# number of send buffers to be used
twister2.network.sendBuffer.count: 4

# number of receive buffers to be used
twister2.network.receiveBuffer.count: 4

# channel pending messages
twister2.network.channel.pending.size: 2048

# the send pending messages
twister2.network.send.pending.max: 10000

# group up to 8 ~ 16 messages
twister2.network.message.group.low_water_mark: 8000

# this is the max number of messages to group
twister2.network.message.group.high_water_mark: 16000

# in batch partition operations, this value will be used to create mini batches
# within partial receivers
twister2.network.message.grouping.size: 10000

# For disk based operations, this directory list will be used to persist incoming messages.
# This can be used to balance the load between multiple devices, by specifying directory locations
# from different devices.
twister2.network.ops.persistent.dirs: ["/mnt/data/persistent/"]

# the maximum amount of bytes kept in memory for operations that goes to disk
twister2.network.shuffle.memory.bytes.max: 102400

# the maximum number of records kept in memory for operations that goes to dist
twister2.network.shuffle.memory.records.max: 102400

# size of the shuffle file (10MB default)
twister2.network.shuffle.file.bytes.max: 1000000

# no of parallel IO operations permitted
twister2.network.shuffle.parallel.io: 2

# the partitioning algorithm
twister2.network.alltoall.algorithm.batch: "ring"

# the overridden job master ip for the twister2 server. Usually the job master ip is derived from the network
# interface with the outgoing internet connection but in special cases this ip can be overridden to use
# some other network interface
twister2.job.master.provided.ip: "172.29.200.214"

##### streaming operations ###########
######################################

## Reduce operation ####
# the buffer size to be used
twister2.network.buffer.size.stream.reduce: 1024000

# number of send buffers to be used
twister2.network.sendBuffer.count.stream.reduce: 2

# number of receive buffers to be used
twister2.network.receiveBuffer.count.strea.reduce: 2

## Gather operation ##
# the buffer size to be used
twister2.network.buffer.size.stream.gather: 1024000

# number of send buffers to be used
twister2.network.sendBuffer.count.stream.gather: 2

# number of receive buffers to be used
twister2.network.receiveBuffer.count.stream.gather: 2

## Bcast operation ##
# the buffer size to be used
twister2.network.buffer.size.stream.bcast: 1024000

# number of send buffers to be used
twister2.network.sendBuffer.count.stream.bcast: 2

# number of receive buffers to be used
twister2.network.receiveBuffer.count.stream.bcast: 2

## Partition operation ##
# the partitioning algorithm
twister2.network.alltoall.algorithm.stream.partition: "simple"

# the buffer size to be used
twister2.network.buffer.size.stream.partition: 1024000

# number of send buffers to be used
twister2.network.sendBuffer.count.stream.partition: 4

# number of receive buffers to be used
twister2.network.receiveBuffer.count.stream.partition: 4

##### batch operations #######
##############################

## Reduce operation ####
# the buffer size to be used
twister2.network.buffer.size.batch.reduce: 1024000

# number of send buffers to be used
twister2.network.sendBuffer.count.batch.reduce: 2

# number of receive buffers to be used
twister2.network.receiveBuffer.count.batch.reduce: 2

## Gather operation ##
# the buffer size to be used
twister2.network.buffer.size.batch.gather: 1024000

# number of send buffers to be used
twister2.network.sendBuffer.count.batch.gather: 2

# number of receive buffers to be used
twister2.network.receiveBuffer.count.batch.gather: 2

## Bcast operation ##
# the buffer size to be used
twister2.network.buffer.size.batch.bcast: 1024000

# number of send buffers to be used
twister2.network.sendBuffer.count.batch.bcast: 2

# number of receive buffers to be used
twister2.network.receiveBuffer.count.batch.bcast: 2

## Partition operation ##

# the partitioning algorithm
twister2.network.alltoall.algorithm.batch.partition: "simple"

# the buffer size to be used
twister2.network.buffer.size.batch.partition: 1024000

# number of send buffers to be used
twister2.network.sendBuffer.count.batch.partition: 4

# number of receive buffers to be used
twister2.network.receiveBuffer.count.batch.partition: 4

## Keyed Gather ##
# the partitioning algorithm
twister2.network.alltoall.algorithm.batch.keyed_gather: "simple"

# ring group worker
ttwister2.network.partition.ring.group.workers.batch.keyed_gather: 2

# the buffer size to be used
twister2.network.buffer.size.batch.keyed_gather: 1024000

# number of send buffers to be used
twister2.network.sendBuffer.count.batch.keyed_gather: 4

# number of receive buffers to be used
twister2.network.receiveBuffer.count.batch.keyed_gather: 4

# group up to 8 ~ 16 messages
twister2.network.message.group.low_water_mark.batch.keyed_gather: 8000

# this is the max number of messages to group
twister2.network.message.group.high_water_mark.batch.keyed_gather: 16000

# in batch partition operations, this value will be used to create mini batches
# within partial receivers
twister2.network.message.grouping.size.batch.keyed_gather: 10000

## Keyed Reduce ##
# the partitioning algorithm
twister2.network.alltoall.algorithm.batch.keyed_reduce: "simple"

# ring group worker
ttwister2.network.partition.ring.group.workers.batch.keyed_reduce: 2

# the buffer size to be used
twister2.network.buffer.size.batch.keyed_reduce: 1024000

# number of send buffers to be used
twister2.network.sendBuffer.count.batch.keyed_reduce: 4

# number of receive buffers to be used
twister2.network.receiveBuffer.count.batch.keyed_reduce: 4

# port offset for python-java connection.
# port+workerId will be used by each worker to communicate with python process
# port-1 will be used by client process for the initial communication
twister2.python.port: 5400

